# CLAUDE.md

This file provides guidance to Claude Code (claude.ai/code) when working with code in this repository.

---

# ü§ñ AGENT-FIRST DEVELOPMENT

**This project uses the Claude Code Agent System (v2.2.0-alpha) for intelligent orchestration.**

## ‚ö†Ô∏è CRITICAL RULE: Agents Are the DEFAULT

**For ANY multi-step task, research, or strategic work: Launch agents FIRST. Manual implementation is a FALLBACK ONLY.**

### Default Workflow (USE FOR 95% OF TASKS)

1. **Multi-step task or strategic work?** ‚Üí Launch **orchestrator agent** (use Task tool with `subagent_type: "orchestrator"`)
2. **Research needed?** ‚Üí Use `/research <topic>` slash command
3. **Explore codebase?** ‚Üí Use `/scout-explore` slash command
4. **After workflows?** ‚Üí Use `/feedback` to analyze performance
5. **Check progress?** ‚Üí Use `/workflow-status`

**NEVER manually implement unless:**
- Agents explicitly failed after retry AND fallback attempted
- Task is trivial (< 5 lines of code, single file)
- User explicitly requests manual work

### Task ‚Üí Agent Mapping

| User Request | Agent(s) to Use | How to Invoke |
|--------------|-----------------|---------------|
| Research topic/technology | Research Agent | `/research <topic>` |
| Explore/understand codebase | Scout Agent | `/scout-explore` |
| Build feature/implement code | Orchestrator ‚Üí Planner ‚Üí Builder | Launch orchestrator agent |
| Strategic analysis/planning | Orchestrator ‚Üí Research ‚Üí Planner | Launch orchestrator agent |
| Fix bug | Scout (find) ‚Üí Builder (fix) | Launch scout, then builder |
| Check workflow progress | Status command | `/workflow-status` |
| Analyze agent performance | Feedback command | `/feedback` |

### Agent Failure Protocol

If agent doesn't return results in 3 minutes:

1. Check `/workflow-status` to see if agent is still running
2. Query database: `/feedback` to see if agent logged errors
3. Try alternative approach (e.g., manual tools if agent failed)
4. Document failure in next `/feedback` run
5. **Only then** fall back to manual implementation

### Plan Mode = Plan Agent Workflows

When in "plan mode":
- Plan **which agents** to use (Research? Orchestrator? Scout?)
- Plan **agent handoff sequence** (Research ‚Üí Planner ‚Üí Builder)
- Plan **strategic workflow** (what research? what deliverables?)

**NOT**: "Plan what code I'll manually write"

### Slash Commands Available

```bash
/research <topic>          # Deep technical/market research
/scout-explore [dir]       # Explore codebase architecture
/workflow-status           # Check active workflows
/feedback                  # Performance analysis & improvement suggestions
/compact-status            # Context window usage
```

### Why This Matters

Without explicit agent-first instructions, Claude defaults to manual implementation even when agents are installed. This section ensures agents are used automatically.

---

## Project Overview

[Add your project-specific information below]
